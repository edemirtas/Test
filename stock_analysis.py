import pandas as pd
import matplotlib.pyplot as plt

def find_peaks_and_valleys(prices):
    peaks = []
    valleys = []
    for i in range(1, len(prices) - 1):
        if prices[i] > prices[i - 1] and prices[i] > prices[i + 1]:
            peaks.append((i, prices[i]))
        elif prices[i] < prices[i - 1] and prices[i] < prices[i + 1]:
            valleys.append((i, prices[i]))
    return peaks, valleys

def plot_stock_graph(stock_data):
    dates = stock_data.index
    prices = stock_data.values

    plt.figure(figsize=(10, 6))
    plt.plot(dates, prices, label='Stock Price', color='blue')
    plt.title('Stock Price Movement')
    plt.xlabel('Date')
    plt.ylabel('Price')
    plt.xticks(rotation=45)
    plt.legend()

    peaks, valleys = find_peaks_and_valleys(prices)

    for peak in peaks:
        plt.plot(dates[peak[0]], peak[1], 'ro')
        plt.text(dates[peak[0]], peak[1], f'Peak: {peak[1]}', ha='right')

    for valley in valleys:
        plt.plot(dates[valley[0]], valley[1], 'go')
        plt.text(dates[valley[0]], valley[1], f'Valley: {valley[1]}', ha='right')

    plt.tight_layout()
    plt.show()

def main():
    # Burada hisse senedi verilerini yükleyin. Örneğin, bir CSV dosyasından yükleyebilirsiniz.
    # stock_data = pd.read_csv('hisse_senedi_verileri.csv')

    # Örnek veri kullanımı:
    data = {

        'Date': ['2024-04-26','2024-04-25','2024-04-24','2024-04-23','2024-04-22','2024-04-19','2024-04-18','2024-04-17','2024-04-16','2024-04-15','2024-04-12','2024-04-11','2024-04-10','2024-04-9','2024-04-8','2024-04-5','2024-04-4','2024-04-3','2024-04-2','2024-04-1','2024-03-28','2024-03-27','2024-03-26','2024-03-25','2024-03-22','2024-03-21','2024-03-20','2024-03-19','2024-03-18','2024-03-15','2024-03-14','2024-03-13','2024-03-12','2024-03-11','2024-03-8','2024-03-7','2024-03-6','2024-03-5','2024-03-4','2024-03-1','2024-02-29','2024-02-28','2024-02-27','2024-02-26','2024-02-23','2024-02-22','2024-02-21','2024-02-20','2024-02-16','2024-02-15','2024-02-14','2024-02-13','2024-02-12','2024-02-9','2024-02-8','2024-02-7','2024-02-6','2024-02-5','2024-02-2','2024-02-1','2024-01-31','2024-01-30','2024-01-29','2024-01-26','2024-01-25','2024-01-24','2024-01-23','2024-01-22','2024-01-19','2024-01-18','2024-01-17','2024-01-16','2024-01-12','2024-01-11','2024-01-10','2024-01-9','2024-01-8','2024-01-5','2024-01-4','2024-01-3','2024-01-2','2023-12-29','2023-12-28','2023-12-27','2023-12-26','2023-12-22','2023-12-21','2023-12-20','2023-12-19','2023-12-18','2023-12-15','2023-12-14','2023-12-13','2023-12-12','2023-12-11','2023-12-8','2023-12-7','2023-12-6','2023-12-5','2023-12-4','2023-12-1','2023-11-30','2023-11-29','2023-11-28','2023-11-27','2023-11-24','2023-11-22','2023-11-21','2023-11-20','2023-11-17','2023-11-16','2023-11-15','2023-11-14','2023-11-13'],
        'Price': [169.3,169.89,169.02,166.9,165.84,165,167.04,168,169.38,172.69,176.55,175.04,167.78,169.67,168.45,169.58,168.82,169.65,168.84,170.03,171.48,173.31,169.71,170.85,172.28,171.37,178.67,176.08,173.72,172.62,173,171.13,173.23,172.75,170.73,169,169.12,170.12,175.1,179.66,180.75,181.42,182.63,181.16,182.52,184.37,182.32,181.56,182.31,183.86,184.15,185.04,187.15,188.85,188.32,189.41,189.3,187.68,185.85,186.86,184.4,188.04,191.73,192.42,194.17,194.5,195.18,193.89,191.56,188.63,182.68,183.63,185.92,185.59,186.19,185.14,185.56,181.18,181.91,184.25,185.64,192.53,193.58,193.15,193.05,193.6,194.68,194.83,196.94,195.89,197.57,198.11,197.96,194.71,193.18,195.71,194.27,192.32,193.42,189.43,191.24,189.95,189.37,190.4,189.79,189.97,191.31,190.64,191.45,189.69,189.71,188.01,187.44,184.8]
        
        }
    stock_data = pd.DataFrame(data)
    stock_data['Date'] = pd.to_datetime(stock_data['Date'])
    stock_data.set_index('Date', inplace=True)

    plot_stock_graph(stock_data)

if __name__ == "__main__":
    main()
